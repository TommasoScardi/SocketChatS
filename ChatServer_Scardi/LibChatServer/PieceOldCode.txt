public class Contacts
{
    public class Contacts
    {
        private int[] _contactsID;
        private int[] _contactsUserID;
        private string[] _contactsUserName;
        private int length;

        public int[] ContactsID { get { return _contactsID; } }
        public int[] ContactsUserID { get { return _contactsUserID; } }
        public string[] ContactsUserName { get { return _contactsUserName; } }
        public int Length { get { return length; } }

        public Contacts(User user)
        {
            if (user is null)
                throw new Exception("The user requesting contacts is inexistent, register a new user to continue");

            Contact[] contacts = ServerDB.GetUserContacts(user);
            _contactsID = new int[contacts.Length];
            _contactsUserID = new int[contacts.Length];
            _contactsUserName = new string[contacts.Length];
            for (int i = 0; i < contacts.Length; i++)
            {
                _contactsID[i] = contacts[i].ContactID;
                _contactsUserID[i] = contacts[i].ContactUserID;
                _contactsUserName[i] = contacts[i].ContactUserName;
            }
        }

        public Contacts(Contact[] contacts)
        {
            _contactsID = new int[contacts.Length];
            _contactsUserID = new int[contacts.Length];
            _contactsUserName = new string[contacts.Length];
            for (int i = 0; i < contacts.Length; i++)
            {
                _contactsID[i] = contacts[i].ContactID;
                _contactsUserID[i] = contacts[i].ContactUserID;
                _contactsUserName[i] = contacts[i].ContactUserName;
            }
        }

    }
}

public class Messages
    {
        private int[] _messagesID;
        private bool[] _messagesSend;
        private int[] _messagesUserReceiverID;
        private DateTime[] _messagesDateTimeSend;
        private string[] _messagesText;

        public int[] MessagesID { get { return _messagesID; } }
        public bool[] MessagesSend { get { return _messagesSend; } }
        public int[] MessagesUserReceiverID { get { return _messagesUserReceiverID; } }
        public DateTime[] MessagesDateTimeSend { get { return _messagesDateTimeSend; } }
        public string[] MessagesText { get { return _messagesText; } }

        public Messages(User user, Contact contact)
        {
            if (user is null || contact is null)
                throw new ArgumentNullException(user is null ? nameof(user) : nameof(contact), user is null ? "The user requesting contacts is inexistent, register a new user to continue":"The contact to associate the messages is null"); ;

            Message[] messages = ServerDB.GetUserMessages(user, contact);
            _messagesID = new int[messages.Length];
            _messagesSend = new bool[messages.Length];
            _messagesUserReceiverID = new int[messages.Length];
            _messagesDateTimeSend = new DateTime[messages.Length];
            _messagesText = new string[messages.Length];
            for (int i = 0; i < messages.Length; i++)
            {
                _messagesID[i] = messages[i].MessageID;
                _messagesSend[i] = messages[i].MessageFlagSend;
                _messagesUserReceiverID[i] = messages[i].MessageUserReceiverID;
                _messagesDateTimeSend[i] = messages[i].MessageDateTimeSend;
                _messagesText[i] = messages[i].MessageText;
            }
        }

        public Messages(Message[] messages)
        {
            _messagesID = new int[messages.Length];
            _messagesSend = new bool[messages.Length];
            _messagesUserReceiverID = new int[messages.Length];
            _messagesDateTimeSend = new DateTime[messages.Length];
            _messagesText = new string[messages.Length];
            for (int i = 0; i < messages.Length; i++)
            {
                _messagesID[i] = messages[i].MessageID;
                _messagesSend[i] = messages[i].MessageFlagSend;
                _messagesUserReceiverID[i] = messages[i].MessageUserReceiverID;
                _messagesDateTimeSend[i] = messages[i].MessageDateTimeSend;
                _messagesText[i] = messages[i].MessageText;
            }
        }

    }